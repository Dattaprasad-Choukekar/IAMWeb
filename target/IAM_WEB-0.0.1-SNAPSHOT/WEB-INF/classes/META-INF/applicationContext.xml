<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<annotation-driven />

	<beans:bean name="resource"
		class="org.springframework.core.io.ClassPathResource" scope="singleton">
		<beans:constructor-arg><beans:value>inmemoryDbConfig.properties</beans:value></beans:constructor-arg>
	</beans:bean>
	
	<!-- You can chose one of the 3 DAO implementations below -->
	<!--  <beans:bean name="daoImpl"
		class="fr.tbr.iamcore.services.impl.dbstore.IdentityDaoDbStoreImpl" scope="singleton">
		<beans:constructor-arg>
			<beans:value>#{resource.getFile()}</beans:value>
		</beans:constructor-arg>
		<beans:constructor-arg >
			<beans:value>true</beans:value>
		</beans:constructor-arg>
	</beans:bean> 
	 -->
	 
	
	<!-- File store implementation -->
	<!--
	 <beans:bean name="daoImpl"
		class="fr.tbr.iamcore.services.impl.filestore.IdentityDAOFileStoreImpl" scope="singleton">
	</beans:bean>
	-->
	
	<!-- XML file store implementation -->
	<!-- <beans:bean name="daoImpl"
		class="fr.tbr.iamcore.services.impl.xmlstore.IdentityDaoXMLStoreImpl" scope="singleton">
	</beans:bean>  -->
	
	 <context:annotation-config/>
	 
	 <beans:bean name="daoImpl"
		class="fr.tbr.iamcore.services.impl.hibernate.HibernateDaoImpl" scope="singleton">
	</beans:bean>
    

		
<!--  	 <beans:bean id="dataSourceBean"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="org.apache.derby.jdbc.EmbeddedDriver" />
		<beans:property name="url" value="jdbc:derby:memory:IDENTITY_DB;create=true" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="password" />
	</beans:bean>  -->
	
	 <beans:bean id="dataSourceBean"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="org.apache.derby.jdbc.ClientDriver" />
		<beans:property name="url" value="jdbc:derby://localhost:1527/IDENTITY_DB;create=true" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="password" />
	</beans:bean> 


	<beans:bean id="hibernateProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<beans:property name="properties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.DerbyDialect</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
				<beans:prop key="hibernate.format_sql">true</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
				<beans:prop key="hibernate.connection.autocommit">false</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>


	<beans:bean id="beanBasedSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSourceBean" />
		<beans:property name="hibernateProperties" ref="hibernateProperties" />
		<beans:property name="packagesToScan" value="fr.tbr.iamcore.datamodel,fr.tbr.iam.web.model" />
	</beans:bean> 
</beans:beans>